
#[CONFIGMAP-SECRET]
#1_organization-service_[ConfigMap-Secret].yml

apiVersion: v1
kind: ConfigMap
metadata:
  name: organization-service
  namespace: default
  labels:
    app: microservicio-organization-service
    role: backend
    stage: production
    version: v1.0.0
data:
  #-------------------------------------------------------------------#
  #--------- CONFIGURACION PROPERTIES [organization-service] ---------#
  #-------------------------------------------------------------------#
  application.properties: |-
    grupoconfig01.nombres=CESAR GUERRA
    grupoconfig01.dni=41816133
    propiedades.config.valor_01=JAVAMAN
    propiedades.config.valor_02=MAKTUP

    #ACCESO 'ZIPKIN' & 'SLEUTH' (CLIENTE), trazabilidad DISTRIBUIDA:
    #spring.zipkin.baseUrl=http://localhost:9411
    spring.zipkin.baseUrl=${ZIPKIN_URL}
    spring.sleuth.sampler.probability=1.0
    
    #ACCESO: ---------- [BOOT-ADMIN]' (CLIENTE) --------------# 
    #spring.boot.admin.client.url=http://localhost:8080
    #spring.boot.admin.client.url=${BOOTADMIN_URL}
    #spring.boot.admin.security.enabled=false
    
    #Configuracion para Conectar a SBA:
    #spring.boot.admin.client.username=${BOOTADMIN_USUARIO}
    #spring.boot.admin.client.password=${BOOTADMIN_PASSWORD}
    
    #Credenciales de 'BASIC AUTHENTICATION' (para ACTIVAR es requerdio descomentar: 'spring-boot-starter-security'):
    #spring.security.user.name=${BOOTADMIN_USUARIO}
    #spring.security.user.password=${BOOTADMIN_PASSWORD}
    
    #Credenciales par la conecion con 'ACTUATOR':
    #spring.boot.admin.client.instance.metadata.user.name=${BOOTADMIN_USUARIO}
    #spring.boot.admin.client.instance.metadata.user.password=${BOOTADMIN_PASSWORD}
    
    #URLs CONEXION: 'ACTUATOR' => 'BOOT-ADMIN':
    #spring.boot.admin.client.instance.management-url=${SERVICE_DNS_URL}/actuator
    #spring.boot.admin.client.instance.management-base-url=${SERVICE_DNS_URL}
    #spring.boot.admin.client.instance.service-url=${SERVICE_DNS_URL}
    #spring.boot.admin.client.instance.health-url=${SERVICE_DNS_URL}/actuator/health
    #---------------------------------------------------------#
    
    
    #CONFIG-MAPs: IMPORTANTE, para el 'config' 3 cosas deben ser IGUALES: los 2 nombres deben ser igual al: 'spring.application.name' & al NOMBRE asignado al 'ConfigMap'.  
    spring.cloud.kubernetes.config.name=${NOMBRE_MICROSERVICIO}
    spring.cloud.kubernetes.config.namespace=default
    spring.cloud.kubernetes.config.sources[0].name=${NOMBRE_MICROSERVICIO}
     
    #spring.cloud.kubernetes.reload.enabled=true
    #spring.cloud.kubernetes.reload.mode=polling
    #spring.cloud.kubernetes.reload.period=1000
    
    management.endpoint.restart.enabled=true
    management.endpoint.health.enabled=true
    management.endpoint.info.enabled=true
    
    
    #Configuracion de 'ACTUATOR' ==> para 'MICROMETER/PROMETHEUS/GRAFANA':
    endpoints.health.sensitive=true
    endpoints.metrics.sensitive=true
    management.endpoint.metrics.enabled=true
    management.endpoint.prometheus.enabled=true
    management.endpoints.enabled-by-default=true
    management.endpoint.health.show-details=always
    management.endpoints.web.exposure.include=*
    management.endpoints.jmx.exposure.include=*
    management.metrics.export.prometheus.enabled=true
    management.metrics.enable.jvm=true
    management.security.enabled=false
    
    #JEAGER: IMPORTANTE: NO se muestra, pero el 'PUERTO' (14268) debe estar abierto en DEPLOYMENT & facilitar su acceso por 'INGRESS'. 
    opentracing.jaeger.service-name=${NOMBRE_MICROSERVICIO}
    opentracing.jaeger.http-sender.url=${JEAGER_URL}
    
    #SWAGGER DOCUMENTATION: 
    springfox.documentation.swagger.v2.path=/API_${NOMBRE_MICROSERVICIO}
    
    #Configuracion de 'KUBERNETES':
    spring.cloud.kubernetes.discovery.all-namespaces=true
    spring.cloud.kubernetes.discovery.catalog-services-watch.enabled=false
    
    #ELASTICSEARCH [LOGs]
    logging.level.root=info
    logging.pattern.console=[%level] [%d{dd-MM-yyyy HH:mm:ss.SSS}] [%thread] | %msg%n
    logging.file=${RUTA_LOG}/${NOMBRE_MICROSERVICIO}.log

---

apiVersion: v1
kind: Secret
metadata:
  name: organization-service-secret
  namespace: default
  labels:
    app: microservicio-organization-service
    role: backend
    stage: production
    version: v1.0.0
  #-------------------------------------------------------------------#
  #---------------------- CONFIGURACION SECRETs ----------------------#
  #--------- Formato BASE64 (https://www.base64encode.net/) ----------#
  #-------------------------------------------------------------------#
data:
  BOOTADMIN_USUARIO: YWRtaW4=
  BOOTADMIN_PASSWORD: YWRtaW4=

