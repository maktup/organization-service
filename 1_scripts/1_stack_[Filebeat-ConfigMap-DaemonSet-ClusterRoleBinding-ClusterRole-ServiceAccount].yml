
#[FILEBEAT-CONFIGMAP-DAEMONSET-CLUSTERROLEBINDING-CLUSTERROLE-SERVICEACCOUNT]
#1_stack_[Filebeat-ConfigMap-DaemonSet-ClusterRoleBinding-ClusterRole-ServiceAccount].yml

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: default
  labels:
    app: filebeat
    role: backend
    stage: production 
data:
  #-------------------------------------------------------------------#
  #--------------- CONFIGURACION PROPERTIES [filebeat] ---------------#
  #-------------------------------------------------------------------#
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /app/log/*.log
    filebeat.config.modules:
      path: ${path.config}/modules.d/*.yml
      reload.enabled: false
    setup.template.settings:
      index.number_of_shards: 1
    output.logstash:
      #IMPORTANTE: Nombre del objeto 'Endpoint' creado. 
      hosts: ["logstash-external-ip"]
      loadbalance: true
    processors:
      - add_host_metadata: ~
      - add_cloud_metadata: ~
      - add_docker_metadata: ~
      - add_kubernetes_metadata: ~
    monitoring.enabled: false
    monitoring.elasticsearch:

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: default
  labels:
    app: filebeat
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: filebeat
        image: elastic/filebeat:7.5.2
        args: [
          "-c", "/usr/share/filebeat/filebeat.yml",
          "-e",
        ]
        #VARIABLES DE ENTORNO: 
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          #DESCOMENTAR SI SE USA: 'Red Hat OpenShift':
          #privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /usr/share/filebeat/filebeat.yml 
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers 
        - name: varlog
          mountPath: /app/log 
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config        
      - name: data
      - name: varlibdockercontainers
      - name: varlog
        #REFERENCIA VOLUMENES: 
        persistentVolumeClaim: 
          claimName: filebeat-pvc
 
---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
  labels:
    app: filebeat
    role: backend
    stage: production 
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: default
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  namespace: default
  labels:
    app: filebeat
    role: backend
    stage: production 
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["namespaces","configmaps", "pods", "services", "endpoints", "secrets"]
  verbs: ["get", "list", "watch"] 

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: default
  labels:
    app: filebeat
    role: backend
    stage: production

